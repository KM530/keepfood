"""Initial migration

Revision ID: 06dc1fbb7cdf
Revises: 
Create Date: 2025-07-31 16:12:36.081673

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06dc1fbb7cdf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('nickname', sa.String(length=50), nullable=False, comment='用户昵称'),
    sa.Column('avatar_url', sa.String(length=255), nullable=True, comment='用户头像图片URL'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='手机号码，可用于登录'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='电子邮箱，可用于登录'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='加密后的用户密码'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('categories',
    sa.Column('user_id', sa.Integer(), nullable=True, comment='外键，关联到users表。NULL表示为系统预置分类'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='分类名称'),
    sa.Column('is_system', sa.Boolean(), nullable=False, comment='是否为系统预置分类'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='外键，关联到users表'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='位置名称'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uk_user_location_name')
    )
    op.create_table('push_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='外键，关联到users表'),
    sa.Column('device_token', sa.String(length=255), nullable=False, comment='从APNS或FCM获取的设备令牌'),
    sa.Column('device_type', sa.Enum('ios', 'android', name='device_type_enum'), nullable=False, comment='设备类型'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='令牌是否有效'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_token')
    )
    op.create_table('foods',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='外键，关联到users表'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='食物名称'),
    sa.Column('image_url', sa.JSON(), nullable=True, comment='食物图片的URL（JSON数组，可以有多个图片）'),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False, comment='数量'),
    sa.Column('unit', sa.String(length=20), nullable=False, comment='数量单位'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='外键，关联到categories表'),
    sa.Column('location_id', sa.Integer(), nullable=True, comment='外键，关联到locations表'),
    sa.Column('production_date', sa.Date(), nullable=True, comment='生产日期'),
    sa.Column('shelf_life_value', sa.Integer(), nullable=True, comment='保质期数值'),
    sa.Column('shelf_life_unit', sa.Enum('day', 'month', 'year', name='shelf_life_unit_enum'), nullable=True, comment='保质期单位'),
    sa.Column('expiry_date', sa.Date(), nullable=False, comment='过期日期，核心排序字段'),
    sa.Column('ingredients_text', sa.Text(), nullable=True, comment='AI识别的配料表原文'),
    sa.Column('harmful_ingredients_json', sa.JSON(), nullable=True, comment='检测到的有害成分列表（JSON数组）'),
    sa.Column('calories_kcal', sa.Integer(), nullable=True, comment='AI分析的卡路里(千卡)'),
    sa.Column('energy_offset_info', sa.String(length=255), nullable=True, comment='AI分析的热量抵消运动建议'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='软删除标记'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('foods', schema=None) as batch_op:
        batch_op.create_index('idx_expiry_date', ['expiry_date'], unique=False)
        batch_op.create_index('idx_user_id', ['user_id'], unique=False)

    op.create_table('shopping_list_items',
    sa.Column('user_id', sa.Integer(), nullable=False, comment='外键，关联到users表'),
    sa.Column('item_name', sa.String(length=100), nullable=False, comment='商品名称'),
    sa.Column('is_checked', sa.Boolean(), nullable=False, comment='是否已勾选购买'),
    sa.Column('created_from_food_id', sa.Integer(), nullable=True, comment='外键，关联到foods表，记录该项是否由某个库存食物添加而来'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='最后更新时间'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_from_food_id'], ['foods.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shopping_list_items', schema=None) as batch_op:
        batch_op.create_index('idx_user_checked', ['user_id', 'is_checked'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shopping_list_items', schema=None) as batch_op:
        batch_op.drop_index('idx_user_checked')

    op.drop_table('shopping_list_items')
    with op.batch_alter_table('foods', schema=None) as batch_op:
        batch_op.drop_index('idx_user_id')
        batch_op.drop_index('idx_expiry_date')

    op.drop_table('foods')
    op.drop_table('push_tokens')
    op.drop_table('locations')
    op.drop_table('categories')
    op.drop_table('users')
    # ### end Alembic commands ###
